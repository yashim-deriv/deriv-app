name: Deriv App Production Workflow
on:
  push:
    tags:
    - production_*
jobs:
  build_test_and_publish:
    name: Build, Test and Publish to Cloudflare Pages Production
    environment: Production
    runs-on: Runner_16cores_Deriv-app
    outputs:
      RELEASE_VERSION: ${{ steps.extract_version.outputs.RELEASE_VERSION }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node
      uses: "./.github/actions/setup_node"
    - name: Install Dependencies
      uses: "./.github/actions/npm_install_from_cache"
    - name: Build
      uses: "./.github/actions/build"
      with:
        NODE_ENV: production
        DATADOG_APPLICATION_ID: ${{ vars.DATADOG_APPLICATION_ID }} 
        DATADOG_CLIENT_TOKEN: ${{ vars.DATADOG_CLIENT_TOKEN }}
        DATADOG_CLIENT_TOKEN_LOGS: ${{ vars.DATADOG_CLIENT_TOKEN_LOGS }}
        DATADOG_SESSION_REPLAY_SAMPLE_RATE: ${{ vars.DATADOG_SESSION_REPLAY_SAMPLE_RATE }}
        DATADOG_SESSION_SAMPLE_RATE: ${{ vars.DATADOG_SESSION_SAMPLE_RATE }}
        DATADOG_SESSION_SAMPLE_RATE_LOGS: ${{ vars.DATADOG_SESSION_SAMPLE_RATE_LOGS }}
        GD_API_KEY: ${{ secrets.GD_API_KEY }}
        GD_APP_ID: ${{ secrets.GD_APP_ID }}
        GD_CLIENT_ID: ${{ secrets.GD_CLIENT_ID }}
        RUDDERSTACK_KEY: ${{ vars.RUDDERSTACK_KEY }}
        RUDDERSTACK_URL: ${{ vars.RUDDERSTACK_URL }}
        REF_NAME: ${{ github.ref_name }}
    - name: Run tests
      run: npm test
    - name: Versioning
      uses: "./.github/actions/versioning"
      with:
        release_type: production
    - name: Extract version
      id: extract_version
      run: echo "RELEASE_VERSION=${version}" >> $GITHUB_OUTPUT
    - name: Publish to Cloudflare Pages Production
      uses: "./.github/actions/publish_to_pages_production"
      with:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    - name: Build Docker image and push to Docker hub and K8S
      uses: "./.github/actions/build_and_push_docker_image"
      with:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKERHUB_ORGANISATION: ${{ secrets.DOCKERHUB_ORGANISATION }}
        K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
        KUBE_SERVER: ${{ secrets.KUBE_SERVER }}
        SERVICEACCOUNT_TOKEN: ${{ secrets.SERVICEACCOUNT_TOKEN }}
        CA_CRT: ${{ secrets.CA_CRT }}
        APP_VERSION: latest

  send_slack_notification:
      name: Send Slack notification
      runs-on: Runner_8cores_Deriv-app
      environment: Production
      if: always()
      needs: [build_test_and_publish]
      steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Conclusion
        uses: technote-space/workflow-conclusion-action@v3
      - name: Send Slack Notification
        uses: "./.github/actions/send_slack_notifications"
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
          release_type: Production 
          version: ${{ needs.build_test_and_publish.outputs.RELEASE_VERSION}}
